(defun solve (puzzle-input)
  (let ((horizontal-pos 0)
        (depth 0))
    (dolist (command puzzle-input (* horizontal-pos depth))
      (let ((magnitude (alexandria:assoc-value command :magnitude)))
        (case (alexandria:assoc-value command :direction)
          (|forward| (incf horizontal-pos magnitude))
          (|up| (decf depth magnitude))
          (|down| (incf depth magnitude)))))))

(defun parse-line (line)
  (let ((command (str:words line)))
    (pairlis '(:direction :magnitude)
             (list (intern (first command)) (parse-integer (second command))))))

(defun dive (filename)
  (solve (mapcar #'parse-line (uiop:read-file-lines filename))))
